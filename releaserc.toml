[plugins]
# Fully qualified definition
git = { location = "builtin" }
# Short definition
clog = "builtin"
#github = "builtin"
#rust = "builtin"
#docker = "builtin"

[steps]
# Shared step
pre_flight = "discover"
# Singleton step
get_last_release = "git"
# Analyze the changes and derive the appropriate version bump
# In case of different results, the most major would be taken
derive_next_version = [ "clog" ]
# Notes from each step would be appended to the notes of previous one
# `discover` is a reserved keyword for deriving the step runners through OpenRPC Service Discovery
# the succession of runs in this case will be determined by the succession in the `plugins` list
generate_notes = "clog"
# Prepare the release (pre-release step for intermediate artifacts generation)
prepare = "discover"
# Check the release before publishing
verify_release = "discover"
# Commit & push changes to the VCS
commit = "git"
# Publish to various platforms
publish = []
# Post-release step to notify users about release (e.g leave comments in issues resolved in this release)
notify = "discover"

[cfg]
# Global configuration

[cfg.clog]
# Ignore commits like feat(ci) cause it makes no sense to issue a release for improvements in CI config
ignore = ["ci"]

[cfg.git]
# Per-plugin configuration
user_name = "Mike Lubinets"
user_email = "me@mkl.dev"
branch = "master"
force_https = true

[cfg.github]
assets = [
    "/workspace/bin/*",
    "Changelog.md"
]

[cfg.docker]
repo_url = "https://github.com/etclabscore/semantic-rs.git"
repo_branch = "master"

[[cfg.docker.images]]
registry = "dockerhub"
namespace = "etclabscore"
dockerfile = ".docker/Dockerfile"
name = "semantic-rs"
tag = "latest"
binary_path = "target/release/semantic-rs"
cleanup = true
build_cmd = "cargo build --release"
exec_cmd = "/bin/semantic-rs"


